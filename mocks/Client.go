// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	rpc "dsrvlabs/tezos-prometheus-exporter/rpc"

	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetBootstrapStatus provides a mock function with given fields:
func (_m *Client) GetBootstrapStatus() (*rpc.BootstrapStatus, error) {
	ret := _m.Called()

	var r0 *rpc.BootstrapStatus
	if rf, ok := ret.Get(0).(func() *rpc.BootstrapStatus); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rpc.BootstrapStatus)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetHeadBlock provides a mock function with given fields:
func (_m *Client) GetHeadBlock() (*rpc.Block, error) {
	ret := _m.Called()

	var r0 *rpc.Block
	if rf, ok := ret.Get(0).(func() *rpc.Block); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rpc.Block)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPeers provides a mock function with given fields:
func (_m *Client) GetPeers() ([]rpc.Peer, error) {
	ret := _m.Called()

	var r0 []rpc.Peer
	if rf, ok := ret.Get(0).(func() []rpc.Peer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]rpc.Peer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
